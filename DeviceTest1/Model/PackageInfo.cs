/*
 * FDB Device Services
 *
 * Web API for accessing medical device information
 *
 * OpenAPI spec version: 1.05
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

namespace DeviceSample.Model
{
    /// <summary>
    /// PackageInfo
    /// </summary>
    [DataContract]
    public partial class PackageInfo : IEquatable<PackageInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PackageInfo" /> class.
        /// </summary>
        /// <param name="PrizmPackageId">PrizmPackageId.</param>
        /// <param name="PackageQuantity">PackageQuantity.</param>
        /// <param name="PackageTypeCode">PackageTypeCode.</param>
        /// <param name="PackageTypeDesc">PackageTypeDesc.</param>
        /// <param name="InnerPrizmPackageId">InnerPrizmPackageId.</param>
        /// <param name="BasePrizmId">BasePrizmId.</param>
        /// <param name="PackageStatusId">PackageStatusId.</param>
        /// <param name="PackageStatusDesc">PackageStatusDesc.</param>
        /// <param name="PackageIdentifiers">PackageIdentifiers.</param>
        public PackageInfo(int? PrizmPackageId = default(int?), string PackageQuantity = default(string), string PackageTypeCode = default(string), string PackageTypeDesc = default(string), int? InnerPrizmPackageId = default(int?), int? BasePrizmId = default(int?), int? PackageStatusId = default(int?), string PackageStatusDesc = default(string), List<PackageIdentifier> PackageIdentifiers = default(List<PackageIdentifier>))
        {
            this.PrizmPackageId = PrizmPackageId;
            this.PackageQuantity = PackageQuantity;
            this.PackageTypeCode = PackageTypeCode;
            this.PackageTypeDesc = PackageTypeDesc;
            this.InnerPrizmPackageId = InnerPrizmPackageId;
            this.BasePrizmId = BasePrizmId;
            this.PackageStatusId = PackageStatusId;
            this.PackageStatusDesc = PackageStatusDesc;
            this.PackageIdentifiers = PackageIdentifiers;
        }

        /// <summary>
        /// Gets or Sets PrizmPackageId
        /// </summary>
        [DataMember(Name = "PrizmPackageId", EmitDefaultValue = false)]
        public int? PrizmPackageId { get; set; }

        /// <summary>
        /// Gets or Sets PackageQuantity
        /// </summary>
        [DataMember(Name = "PackageQuantity", EmitDefaultValue = false)]
        public string PackageQuantity { get; set; }

        /// <summary>
        /// Gets or Sets PackageTypeCode
        /// </summary>
        [DataMember(Name = "PackageTypeCode", EmitDefaultValue = false)]
        public string PackageTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets PackageTypeDesc
        /// </summary>
        [DataMember(Name = "PackageTypeDesc", EmitDefaultValue = false)]
        public string PackageTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets InnerPrizmPackageId
        /// </summary>
        [DataMember(Name = "InnerPrizmPackageId", EmitDefaultValue = false)]
        public int? InnerPrizmPackageId { get; set; }

        /// <summary>
        /// Gets or Sets BasePrizmId
        /// </summary>
        [DataMember(Name = "BasePrizmId", EmitDefaultValue = false)]
        public int? BasePrizmId { get; set; }

        /// <summary>
        /// Gets or Sets PackageStatusId
        /// </summary>
        [DataMember(Name = "PackageStatusId", EmitDefaultValue = false)]
        public int? PackageStatusId { get; set; }

        /// <summary>
        /// Gets or Sets PackageStatusDesc
        /// </summary>
        [DataMember(Name = "PackageStatusDesc", EmitDefaultValue = false)]
        public string PackageStatusDesc { get; set; }

        /// <summary>
        /// Gets or Sets PackageIdentifiers
        /// </summary>
        [DataMember(Name = "PackageIdentifiers", EmitDefaultValue = false)]
        public List<PackageIdentifier> PackageIdentifiers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PackageInfo {\n");
            sb.Append("  PrizmPackageId: ").Append(PrizmPackageId).Append("\n");
            sb.Append("  PackageQuantity: ").Append(PackageQuantity).Append("\n");
            sb.Append("  PackageTypeCode: ").Append(PackageTypeCode).Append("\n");
            sb.Append("  PackageTypeDesc: ").Append(PackageTypeDesc).Append("\n");
            sb.Append("  InnerPrizmPackageId: ").Append(InnerPrizmPackageId).Append("\n");
            sb.Append("  BasePrizmId: ").Append(BasePrizmId).Append("\n");
            sb.Append("  PackageStatusId: ").Append(PackageStatusId).Append("\n");
            sb.Append("  PackageStatusDesc: ").Append(PackageStatusDesc).Append("\n");
            sb.Append("  PackageIdentifiers: ").Append(PackageIdentifiers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PackageInfo);
        }

        /// <summary>
        /// Returns true if PackageInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of PackageInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PackageInfo other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return
                (
                    this.PrizmPackageId == other.PrizmPackageId ||
                    this.PrizmPackageId != null &&
                    this.PrizmPackageId.Equals(other.PrizmPackageId)
                ) &&
                (
                    this.PackageQuantity == other.PackageQuantity ||
                    this.PackageQuantity != null &&
                    this.PackageQuantity.Equals(other.PackageQuantity)
                ) &&
                (
                    this.PackageTypeCode == other.PackageTypeCode ||
                    this.PackageTypeCode != null &&
                    this.PackageTypeCode.Equals(other.PackageTypeCode)
                ) &&
                (
                    this.PackageTypeDesc == other.PackageTypeDesc ||
                    this.PackageTypeDesc != null &&
                    this.PackageTypeDesc.Equals(other.PackageTypeDesc)
                ) &&
                (
                    this.InnerPrizmPackageId == other.InnerPrizmPackageId ||
                    this.InnerPrizmPackageId != null &&
                    this.InnerPrizmPackageId.Equals(other.InnerPrizmPackageId)
                ) &&
                (
                    this.BasePrizmId == other.BasePrizmId ||
                    this.BasePrizmId != null &&
                    this.BasePrizmId.Equals(other.BasePrizmId)
                ) &&
                (
                    this.PackageStatusId == other.PackageStatusId ||
                    this.PackageStatusId != null &&
                    this.PackageStatusId.Equals(other.PackageStatusId)
                ) &&
                (
                    this.PackageStatusDesc == other.PackageStatusDesc ||
                    this.PackageStatusDesc != null &&
                    this.PackageStatusDesc.Equals(other.PackageStatusDesc)
                ) &&
                (
                    this.PackageIdentifiers == other.PackageIdentifiers ||
                    this.PackageIdentifiers != null &&
                    this.PackageIdentifiers.SequenceEqual(other.PackageIdentifiers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.PrizmPackageId != null)
                    hash = hash * 59 + this.PrizmPackageId.GetHashCode();
                if (this.PackageQuantity != null)
                    hash = hash * 59 + this.PackageQuantity.GetHashCode();
                if (this.PackageTypeCode != null)
                    hash = hash * 59 + this.PackageTypeCode.GetHashCode();
                if (this.PackageTypeDesc != null)
                    hash = hash * 59 + this.PackageTypeDesc.GetHashCode();
                if (this.InnerPrizmPackageId != null)
                    hash = hash * 59 + this.InnerPrizmPackageId.GetHashCode();
                if (this.BasePrizmId != null)
                    hash = hash * 59 + this.BasePrizmId.GetHashCode();
                if (this.PackageStatusId != null)
                    hash = hash * 59 + this.PackageStatusId.GetHashCode();
                if (this.PackageStatusDesc != null)
                    hash = hash * 59 + this.PackageStatusDesc.GetHashCode();
                if (this.PackageIdentifiers != null)
                    hash = hash * 59 + this.PackageIdentifiers.GetHashCode();
                return hash;
            }
        }
    }
}